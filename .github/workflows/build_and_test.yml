# vim: hlsearch ts=2 sw=2 et :

name: build-and-test

# Run this workflow every time a new commit pushed to your repository
on: push

jobs:
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
  build-and-test:
    # Name the Job
    name: build and test
    # Set the type of machine to run on
    runs-on: ubuntu-latest

    container:
      image: ubuntu:xenial
    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: apt packages
        run: |

          msg="[+] STARTING"
          printf "%s\n" "${msg}"
          printf "%s\n" "${msg}" >&2


          apt-get clean && \
          apt-get update && \
          apt-get install -y --no-install-recommends \
            apt-transport-https \
            bzip2       \
            ca-certificates \
            curl        \
            make        \
            software-properties-common \
            sudo        \
            time        \
            wget

          add-apt-repository ppa:git-core/ppa
          apt-get update
          apt-get install -y --no-install-recommends git

          msg="[+] INSTALLED APT PACKAGES"
          printf "%s\n" "${msg}"
          printf "%s\n" "${msg}" >&2


          curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash - \
            && sudo apt install -y --no-install-recommends nodejs

          msg="[+] INSTALLED NODE"
          printf "%s\n" "${msg}"
          printf "%s\n" "${msg}" >&2

          which node
          which npm
          node --version
          npm --version


          curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - \
            &&  echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list \
            &&  sudo apt-get update || true \
            &&  sudo apt-get install -y yarn \
            &&  sudo apt-get install -y gettext \
            &&  sudo apt-get install -y libsecret-1-dev


          msg="[+] INSTALLED YARN"
          printf "%s\n" "${msg}"
          printf "%s\n" "${msg}" >&2



      - name: Checkout code
        uses: actions/checkout@v2

      - name: build and test
        run: |
          set -ex

          msg="[+] STARTING"
          printf "%s\n" "${msg}"
          printf "%s\n" "${msg}" >&2

          npm --version
          node --version
          yarn --version

          export ELECTRON_CACHE=$HOME/.cache/electron
          export ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

          npm install

          msg="[+] DONE INSTALL"
          printf "%s\n" "${msg}"
          printf "%s\n" "${msg}" >&2


          cd packages/app-desktop \
            &&  USE_HARD_LINKS=false npm run dist

          msg="[+] DONE BUILD"
          printf "%s\n" "${msg}"
          printf "%s\n" "${msg}" >&2



